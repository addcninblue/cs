!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/ff6491f/
AirlineCompany	AirlineCompany.java	/^public class AirlineCompany {$/;"	c
Airplane	Airplane.java	/^    public Airplane (){$/;"	m	class:Airplane
Airplane	Airplane.java	/^public class Airplane {$/;"	c
CancelSeats	CancelSeats.java	/^public class CancelSeats {$/;"	c
DisplayOccupancy	DisplayOccupancy.java	/^public class DisplayOccupancy{$/;"	c
Passenger	Passenger.java	/^	public Passenger(String firstName, String lastName, int row, int column)$/;"	m	class:Passenger
Passenger	Passenger.java	/^public class Passenger$/;"	c
Print	Print.java	/^public class Print {$/;"	c
ReserveSeats	ReserveSeats.java	/^public class ReserveSeats{$/;"	c
Seat	Seat.java	/^    public Seat (int row, int column, boolean isWindow, boolean isAisle, boolean isMiddle){$/;"	m	class:Seat
Seat	Seat.java	/^public class Seat {$/;"	c
airplane	AirlineCompany.java	/^    private static Airplane airplane;$/;"	f	class:AirlineCompany	file:
airplaneSeats	Airplane.java	/^    private Seat[][] airplaneSeats;$/;"	f	class:Airplane	file:
availableSeats	ReserveSeats.java	/^    public static boolean[][] availableSeats(Airplane airplane){$/;"	m	class:ReserveSeats
cancelSeats	CancelSeats.java	/^    public static void cancelSeats(Airplane airplane, ArrayList<Passenger> passengers){$/;"	m	class:CancelSeats
column	Passenger.java	/^	private int column; \/\/ value 1-8 as a placeholder for the letters$/;"	f	class:Passenger	file:
column	Seat.java	/^    public final int column; \/\/ letters in numerical form. 1-6$/;"	f	class:Seat
displayOccupancy	DisplayOccupancy.java	/^    public static void displayOccupancy(Airplane airplane){$/;"	m	class:DisplayOccupancy
findSeatsGroup	ReserveSeats.java	/^    public static int[] findSeatsGroup(boolean[][] availableSeats, int numberOfSeats, int rowSta/;"	m	class:ReserveSeats
findSeatsNear	UnusedCode.java	/^    public static boolean[][] findSeatsNear(boolean[][] availableSeats, int columnStart, int col/;"	m
firstName	Passenger.java	/^	private String firstName;$/;"	f	class:Passenger	file:
firstName	Seat.java	/^    private String firstName; \/\/ name of the passenger$/;"	f	class:Seat	file:
getAirplaneSeats	Airplane.java	/^    public Seat[][] getAirplaneSeats(){$/;"	m	class:Airplane
getColumn	Passenger.java	/^	public int getColumn()$/;"	m	class:Passenger
getFirstName	Passenger.java	/^	public String getFirstName()$/;"	m	class:Passenger
getFirstName	Seat.java	/^    public String getFirstName(){$/;"	m	class:Seat
getGroupNames	ReserveSeats.java	/^    public static String[][] getGroupNames(int groupSize){$/;"	m	class:ReserveSeats
getLastName	Passenger.java	/^	public String getLastName()$/;"	m	class:Passenger
getLastName	Seat.java	/^    public String getLastName(){$/;"	m	class:Seat
getRow	Passenger.java	/^	public int getRow()$/;"	m	class:Passenger
groupPreferentialSeating	ReserveSeats.java	/^    public static void groupPreferentialSeating(Airplane airplane, ArrayList<Passenger> passenge/;"	m	class:ReserveSeats
hasSeats	ReserveSeats.java	/^    public static int[] hasSeats(boolean[][] availableSeats, int numberOfSeats){$/;"	m	class:ReserveSeats
hasSeats	ReserveSeats.java	/^    public static int[] hasSeats(boolean[][] availableSeats, int numberOfSeats, int row, int sta/;"	m	class:ReserveSeats
hasSeats	ReserveSeats.java	/^    public static int[] hasSeats(boolean[][] availableSeats, int numberOfSeats, int startRow){$/;"	m	class:ReserveSeats
individualPreferentialSeating	ReserveSeats.java	/^    private static void individualPreferentialSeating(Airplane airplane, ArrayList<Passenger> pa/;"	m	class:ReserveSeats	file:
individualSmartChoice	ReserveSeats.java	/^    public static void individualSmartChoice(Airplane airplane, ArrayList<Passenger> passengers)/;"	m	class:ReserveSeats
isAisle	Seat.java	/^    public final boolean isAisle; \/\/ is it an aisle seat?$/;"	f	class:Seat
isMiddle	Seat.java	/^    public final boolean isMiddle; \/\/ either middle or side seat$/;"	f	class:Seat
isVacant	Seat.java	/^    public boolean isVacant;$/;"	f	class:Seat
isWindow	Seat.java	/^    public final boolean isWindow; \/\/ is it a window seat?$/;"	f	class:Seat
lastName	Passenger.java	/^	private String lastName;$/;"	f	class:Passenger	file:
lastName	Seat.java	/^    private String lastName;$/;"	f	class:Seat	file:
main	AirlineCompany.java	/^    public static void main (String [] args){$/;"	m	class:AirlineCompany
main	tester.java	/^    public static void main (String [] args){$/;"	m	class:tester
passengers	AirlineCompany.java	/^    private static ArrayList<Passenger> passengers;$/;"	f	class:AirlineCompany	file:
preferentialSeating	ReserveSeats.java	/^    public static void preferentialSeating(Airplane airplane, ArrayList<Passenger> passengers){$/;"	m	class:ReserveSeats
printPassengerInfo	Print.java	/^    public static void printPassengerInfo(ArrayList<Passenger> passengers){$/;"	m	class:Print
printReservedSeatsInfo	Print.java	/^    public static void printReservedSeatsInfo(Airplane airplane){$/;"	m	class:Print
randomFillAirplane	AirlineCompany.java	/^    public static void randomFillAirplane(){$/;"	m	class:AirlineCompany
reserveSeats	ReserveSeats.java	/^    public static void reserveSeats(Airplane airplane, ArrayList<Passenger> passengers, String f/;"	m	class:ReserveSeats
reserveSeatsManually	ReserveSeats.java	/^    public static void reserveSeatsManually(Airplane airplane, ArrayList<Passenger> passengers){$/;"	m	class:ReserveSeats
row	Passenger.java	/^	private int row;$/;"	f	class:Passenger	file:
row	Seat.java	/^    public final int row; \/\/ 0 - 12$/;"	f	class:Seat
setAirplaneSeatName	Airplane.java	/^    public void setAirplaneSeatName(int row, int column, String firstName, String lastName){$/;"	m	class:Airplane
setPassengerName	Seat.java	/^    public void setPassengerName(String firstName, String lastName){$/;"	m	class:Seat
tester	tester.java	/^public class tester {$/;"	c
